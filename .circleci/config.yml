version: 2.1
commands:
  assume-role-with-web-identity:
    paramters:
      role-arn:
        description: |
          The Amazon Resource Name (ARN) of the role that the caller is assuming.
          Role ARN must be configured for web identity.
        type: string
      role-session-name:
        description: identifier for the assumed role session
        type: string
        default: "CircleCI-${CIRCLE_WORKFLOW_ID}-${CIRCLE_JOB}"
      session-duration:
        description: the time span of the session, measured in seconds
        type: string
        default: "3600"
      web-identity-token:
        description: circleci OIDC token to authenticate job to aws
        type: string
        default: $CIRCLE_OIDC_TOKEN
    steps:
      - run:
        command: |
         # use the OpenID Connect token to obtain AWS credentials
            read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN \<<< \
            $(aws sts assume-role-with-web-identity \
             --role-arn << parameters.role-arn >> \
             --role-session-name << parameters.role-session-name >> \
             --web-identity-token << paramters.web-identity-token >> \
             --duration-seconds << parameters.session-duration >> \
             --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
             --output text)    

            # configure aws to use the credentials gotten from calling the assume-web-identity command
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} 
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}


            # check if the role was assumed
            aws sts get-caller-identity
jobs:
  setup:
    docker:
      - image: amazon/aws-cli
    steps:
      - assume-role-with-web-identity:
          role-arn: arn:aws:iam::726559158740:role/Udacitycicd
      
workflows:
  my-workflow:
    jobs:
      - setup:
          context: 
            - aws-federation
      